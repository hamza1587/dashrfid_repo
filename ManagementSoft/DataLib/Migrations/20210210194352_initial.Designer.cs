// <auto-generated />
using System;
using DataLib.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLib.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210210194352_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLib.Entities.Associations", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("asset_id")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("association_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit");

                    b.Property<int?>("reader_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("readtime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("tag_id")
                        .HasColumnType("int");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("reader_id");

                    b.HasIndex("tag_id");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("DataLib.Entities.RFIDLocations", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("location_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("location_type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("RFIDLocations");
                });

            modelBuilder.Entity("DataLib.Entities.RFIDNotifications", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description_n")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("reference_n")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("status_n")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("title_n")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("RFIDNotifications");
                });

            modelBuilder.Entity("DataLib.Entities.RFIDSysStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("status_sys")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("RFIDSysStatus");
                });

            modelBuilder.Entity("DataLib.Entities.ReadersInventory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("connection_check")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit");

                    b.Property<int?>("location_id")
                        .HasColumnType("int");

                    b.Property<string>("reader_ip")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("reader_macaddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("reader_name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("reader_status")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("reader_type")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("sets_status")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("location_id");

                    b.ToTable("ReadersInventory");
                });

            modelBuilder.Entity("DataLib.Entities.ReadingRPASFlux", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("asset_status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("association_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("epc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("readtime")
                        .HasColumnType("datetime2")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("association_id");

                    b.ToTable("ReadingRPASFlux");
                });

            modelBuilder.Entity("DataLib.Entities.ReadingTagsFlux", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("association_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit");

                    b.Property<int?>("reader_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("readtime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("association_id");

                    b.HasIndex("reader_id");

                    b.ToTable("ReadingTagsFlux");
                });

            modelBuilder.Entity("DataLib.Entities.TagsInventory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("epc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("tagfunction")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("tagstatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("userdata")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("TagsInventory");
                });

            modelBuilder.Entity("DataLib.Entities.TimeSpent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("association_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit")
                        .HasMaxLength(50);

                    b.Property<int?>("minutes_log")
                        .HasColumnType("int");

                    b.Property<int?>("reader_id")
                        .HasColumnType("int");

                    b.Property<string>("status_log")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("association_id");

                    b.HasIndex("reader_id");

                    b.ToTable("TimeSpent");
                });

            modelBuilder.Entity("DataLib.Entities.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataLib.Entities.Associations", b =>
                {
                    b.HasOne("DataLib.Entities.ReadersInventory", "ReadersInventory")
                        .WithMany()
                        .HasForeignKey("reader_id");

                    b.HasOne("DataLib.Entities.TagsInventory", "TagsInventory")
                        .WithMany()
                        .HasForeignKey("tag_id");
                });

            modelBuilder.Entity("DataLib.Entities.ReadersInventory", b =>
                {
                    b.HasOne("DataLib.Entities.RFIDLocations", "RFIDLocations")
                        .WithMany()
                        .HasForeignKey("location_id");
                });

            modelBuilder.Entity("DataLib.Entities.ReadingRPASFlux", b =>
                {
                    b.HasOne("DataLib.Entities.Associations", "Associations")
                        .WithMany()
                        .HasForeignKey("association_id");
                });

            modelBuilder.Entity("DataLib.Entities.ReadingTagsFlux", b =>
                {
                    b.HasOne("DataLib.Entities.Associations", "Associations")
                        .WithMany()
                        .HasForeignKey("association_id");

                    b.HasOne("DataLib.Entities.ReadersInventory", "ReadersInventory")
                        .WithMany()
                        .HasForeignKey("reader_id");
                });

            modelBuilder.Entity("DataLib.Entities.TimeSpent", b =>
                {
                    b.HasOne("DataLib.Entities.Associations", "Associations")
                        .WithMany()
                        .HasForeignKey("association_id");

                    b.HasOne("DataLib.Entities.ReadersInventory", "ReadersInventory")
                        .WithMany()
                        .HasForeignKey("reader_id");
                });
#pragma warning restore 612, 618
        }
    }
}
